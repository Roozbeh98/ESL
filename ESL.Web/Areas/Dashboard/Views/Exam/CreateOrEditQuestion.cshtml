@model ESL.Web.Areas.Dashboard.Models.ViewModels.Model_Question
@using ESL.Services.BaseRepository

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)

    <div class="modal-main">

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label " })
            <div class="input-group">
                <span class=" input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })

            </div>
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label " })
            @Html.DropDownListFor(model => model.Type, Rep_CodeGroup.Get_AllCodesWithGroupWithGUID(CodeGroup.QuestionType), new { @class = "form-control Select2_Normal" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Group, htmlAttributes: new { @class = "control-label " })
            @Html.DropDownListFor(model => model.Group, Rep_CodeGroup.Get_AllCodesWithGroupWithGUID(CodeGroup.QuestionGroup), new { @class = "form-control Select2_Normal" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Response, htmlAttributes: new { @class = "control-label " })
            @Html.DropDownListFor(model => model.Response, Rep_CodeGroup.Get_AllCodesWithGroupWithGUID(CodeGroup.QuestionOption), new { @class = "form-control Select2_Normal" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mark, htmlAttributes: new { @class = "control-label " })
            <div class="input-group">
                <span class=" input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                @Html.EditorFor(model => model.Mark, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            @Html.ValidationMessageFor(model => model.Mark, "", new { @class = "text-danger" })
        </div>


    </div>
<div class="" style="margin-top:20px;">
    <button class="btn btn-danger modal-btn-Dual pull-left" type="button" data-dismiss="modal">انصراف</button>
    <button class="btn btn-success modal-btn-Dual pull-right " type="submit" name="btn-Delete">تایید</button>

</div>

}

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/Plugins/jQuery.Select2/select2.js"></script>
<script src="~/Scripts/Plugins/jQuery.Select2/i18n/fa.js"></script>

<script src="~/Scripts/MyScripts/Select2_Config.js"></script>

<script>
    $(".student").ready(function () {
        $("#Details_BD_StudentID").select2({
            theme: "bootstrap",
            language: "fa",
            dir: "rtl",
            tokenSeparators: [',', ' '],
            minimumResultsForSearch: 6,
            placeholder: 'انتخاب کنید',
            ajax: {
                url: '/User/Get_AllStudentList',
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data
                    };
                }
            }
        });
    });
</script>
